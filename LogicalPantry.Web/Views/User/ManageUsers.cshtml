@model IEnumerable<LogicalPantry.DTOs.UserDtos.UserDto>

@{
    ViewData["Title"] = "Manage Users";
    var tenantName = ViewBag.TenantName as string;

}

@Html.AntiForgeryToken()

<head>
    <link href="~/css/style.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.datatables.net/v/bs5/jszip-3.10.1/dt-2.0.8/b-3.0.2/b-html5-3.0.2/r-3.0.2/sc-2.4.3/sp-2.3.1/sl-2.0.3/datatables.min.css" />
    <link rel="stylesheet" href="https://cdn.datatables.net/2.0.8/css/dataTables.dataTables.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/buttons/3.0.2/css/buttons.dataTables.css">
    <style>
        td {
            max-width: 200px; /* Adjust the max-width as per your layout */
            white-space: normal;
        }

        .card-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-end;
        }

        .mt-n5, .my-n5 {
            margin-top: 2rem !important;
        }

        .datatable table.dataTable thead, .datatable table.dataTable tfoot {
            color: #000000;
        }

        .dataTables_wrapper .dataTables_scrollHeadInner table.dataTable thead th {
            text-align: left !important; /* Align all headers to the left */
        }

        .text-center {
            text-align: center; /* Align text in specific columns to the center */
        }

        .text-left {
            text-align: left !important;
        }

        table.dataTable.nowrap th, table.dataTable.nowrap td {
            white-space: normal;
        }

        .datatable table.dataTable thead, .datatable table.dataTable tfoot {
            color: #121212;
        }

        #successMessageUser {
            color: green !important;
            font-size: 13px;
            text-align: left !important;
        }

        .mt-n10, .my-n10 {
            margin-top: -10rem !important;
        }

        .sidenav-light {
            background-color: #fff;
            color: #1f2d41;
        }

            .sidenav-light .sidenav-menu .nav-link:hover {
                color: #0061f2;
            }

        .sidenav .sidenav-menu .nav .sidenav-menu-heading {
            padding: 1.75rem 1rem 0.75rem;
            font-size: 0.7rem;
            font-weight: bold;
            text-transform: uppercase;
            letter-spacing: 0.05em;
        }

        .hidden {
            display: none;
        }

        .hidden {
            display: none;
        }

        .footer-custom {
            background-color: #fff;
            color: #1f2d41;
        }

        .sidenav-light .sidenav-menu .nav-link:hover {
            color: black;
            background-color: #f1f1f1;
            border-radius: 0.2rem;
            margin: 0rem 0.5rem 0rem 0.75rem;
            padding-left: 0.5rem !important;
        }

        
        table.dataTable.nowrap th, table.dataTable.nowrap td {
            white-space: normal;
        }

        .card-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-end;
        }

    
        /* Custom styles for SweetAlert2 */
        .swal-container {
            max-width: 100%;
            padding: 1em; /* Padding for responsive design */
        }

        .swal-popup {
            border-radius: 10px; /* Rounded corners */
        }

        /* Optional: Styling for backdrop */
     


        /* Custom styles for SweetAlert2 */
        .swal-container {
           /*  max-width: 90vw; */ /* Max width of popup */
            max-height: 90vh; /* Max height of popup */
            width: auto; /* Auto width based on content */
            height: auto; /* Auto height based on content */
            padding: 1em; /* Padding for responsive design */
            box-sizing: border-box; /* Ensure padding is included in width/height */
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .swal-popup {
            border-radius: 10px; /* Rounded corners */
            width: 100%; /* Full width of container */
            max-width: 600px; /* Max width of popup */
            height: auto; /* Auto height based on content */
            max-height: 80vh; /* Max height of popup */
        }

        /* Optional: Styling for backdrop */
        .swal2-backdrop {
             /* Slightly transparent */
        }
   
    </style>
</head>

<main>
    <header class="page-header pb-10">
        <div class="container">
            <div class="page-header-content pt-4">
                <div class="row align-items-center justify-content-between">
                    <div class="col-auto mt-4">
                    </div>
                </div>
            </div>
        </div>
    </header>

    <div class="container mt-n10">
        <div class="card mb-4">
            <div class="card-header d-flex justify-content-between align-items-center">
                <div style="font-size:25px">Manage Users</div>
            </div>

            <div class="card-body">
                <div class="datatable">
                    
                        <div id="successMessageUser" class="alert alert-success" style="display:none;">
                            User Updated Succesfully.
                        </div>
                    

                    
                        <div id="errorMessageUser" class="alert alert-danger" style="display:none;">
                            Error occured while updating user.
                        </div>
                    

                    <table class="table table-bordered table-hover dt-responsive nowrap" id="" width="100%" style="min-width: 250px;" cellspacing="0">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Email</th>
                                <th>Allow</th>
                                <th>Delete</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in Model)
                            {
                                <tr>
                                    <td>@user.FullName</td>
                                    <td>@user.Email</td>
                                    <td class="leave-td">
                                        
                                        <div class="checkbox-wrapper-4">
                                            <input class="inp-cbx" type="checkbox" id="allowCheckbox_@user.Id" data-user-id="@user.Id" @(user.IsAllow ? "checked" : "") />
                                            <label class="cbx" for="allowCheckbox_@user.Id">
                                                <span>
                                                    <svg width="12px" height="10px">
                                                        <use xlink:href="#check-4"></use>
                                                    </svg>
                                                </span>
                                            </label>
                                            <svg class="inline-svg">
                                                <symbol id="check-4" viewBox="0 0 12 10">
                                                    <polyline points="1.5 6 4.5 9 10.5 1"></polyline>
                                                </symbol>
                                            </svg>
                                        </div>
                                    
                                    </td>
                                    <td class="text-center">
                                        <a href="#" class="deleteHref" onclick="deleteUser('@user.Id')">Delete</a>
                                    </td>
                             
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</main>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://cdn.datatables.net/v/bs5/jszip-3.10.1/dt-2.0.8/b-3.0.2/b-html5-3.0.2/r-3.0.2/sc-2.4.3/sp-2.3.1/sl-2.0.3/datatables.min.js"></script>
    <script src="https://cdn.datatables.net/2.0.8/js/dataTables.js"></script>
    <script src="https://cdn.datatables.net/2.0.8/js/dataTables.jqueryui.js"></script>
    <script src="https://cdn.datatables.net/rowgroup/1.5.0/js/dataTables.rowGroup.js"></script>
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>
    <script src="https://cdn.datatables.net/2.0.8/js/dataTables.jqueryui.js"></script>
    <script src="https://cdn.datatables.net/rowgroup/1.5.0/js/rowGroup.jqueryui.js"></script>
    <link rel="stylesheet" href="https://cdn.datatables.net/rowgroup/1.5.0/css/rowGroup.jqueryui.css">
    
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    
   @*  <script>
        $(document).ready(function () {
            $('#dataTable').DataTable({
                paging: true,
                responsive: true,
                lengthChange: false,
                searching: false,
                columnDefs: [
                    { targets: '_all', className: 'text-left' }
                ]
            });
          

            $(".inp-cbx").on("change", function () {
                var checkbox = $(this);
                var userId = checkbox.data("user-id");
                var isChecked = checkbox.prop("checked");

                var updatedNotificationList = JSON.stringify({ Id: userId, IsAllow: isChecked });

                $.ajax({
                    url: "/User/UpdateUser?updatedNotificationList=" + updatedNotificationList,
                    data: updatedNotificationList,
                    dataType: "json",
                    success: function (response) {
                        if (response.success) {
                            $('#successMessageUser').text('Changes saved successfully.').fadeIn().delay(2000).fadeOut();
                        } else {
                            $('#errorMessageUser').text('Error occurred while saving user.').fadeIn().delay(2000).fadeOut();
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Error updating user status:", error);
                    }
                });
            });

            $('.dt-buttons').addClass('float-end');

            hideMessages();

            function hideMessages() {
                setTimeout(function () {
                    $('#successMessageUser').fadeOut('slow');
                    $('#errorMessageUser').fadeOut('slow');
                }, 5000);
            }
        });

        function deleteUser(userId) {
            Swal.fire({
                title: 'Delete User',
                text: 'Are you sure you want to delete this user?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Delete',
                cancelButtonText: 'Cancel',
                width: 'auto', // Auto width based on content and constraints
                heightAuto: true, // Automatically adjusts height
                customClass: {
                    container: 'swal-container', // Custom class for styling
                    popup: 'swal-popup' // Custom class for popup styling
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = '/User/DeleteUser/' + userId;
                }
            });
        }
    </script> *@


    <script>
        $(document).ready(function () {
            ;
            // Get the tenant name from ViewBag
            var tenantName = '@ViewBag.TenantName';

            // Initialize DataTable with custom options
            $('#dataTable').DataTable({
                paging: true,
                responsive: true,
                lengthChange: false,
                searching: false,
                columnDefs: [
                    { targets: '_all', className: 'text-left' }
                ]
            });

            $(".inp-cbx").on("change", function () {
                var checkbox = $(this);
                var userId = checkbox.data("user-id");
                var isChecked = checkbox.prop("checked");

                var tenantName = '@ViewBag.TenantName';

                // Send data as query parameters
                $.ajax({
                    url: "/" + tenantName + "/User/UpdateUser?userId=" + userId + "&isAllow=" + isChecked,
                    type: "POST", // You can also use GET if desired
                    success: function (response) {
                        if (response.success) {
                            $('#successMessageUser').text('Changes saved successfully.').fadeIn().delay(2000).fadeOut();
                        } else {
                            $('#errorMessageUser').text('Error occurred while saving user.').fadeIn().delay(2000).fadeOut();
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Error updating user status:", error);
                    }
                });
            });


            // Custom styling for DataTable buttons
            $('.dt-buttons').addClass('float-end');

            // Automatically hide success/error messages after 5 seconds
            hideMessages();

            function hideMessages() {
                setTimeout(function () {
                    $('#successMessageUser').fadeOut('slow');
                    $('#errorMessageUser').fadeOut('slow');
                }, 5000);
            }
        });

      

        function deleteUser(userId) {
            var tenantName = '@ViewBag.TenantName'; // Get the tenant name from ViewBag

            Swal.fire({
                title: 'Delete User',
                text: 'Are you sure you want to delete this user?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Delete',
                cancelButtonText: 'Cancel',
                width: 'auto',
                heightAuto: true,
                customClass: {
                    container: 'swal-container',
                    popup: 'swal-popup'
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    // Perform DELETE request using Fetch API
                    fetch('/' + tenantName + '/User/DeleteUser/' + userId, {
                        method: 'DELETE'
                    })
                        .then(response => {
                            if (response.ok) {
                                // Optionally redirect or update the UI
                                Swal.fire('Deleted!', 'User has been deleted.', 'success')
                                    .then(() => {
                                        window.location.reload(); // Reload the page after deletion
                                    });
                            } else if (response.status === 404) {
                                Swal.fire('Error!', 'User not found.', 'error');
                            } else {
                                Swal.fire('Error!', 'An error occurred while deleting the user.', 'error');
                            }
                        })
                        .catch(error => {
                            Swal.fire('Error!', 'Internal server error.', 'error');
                        });
                }
            });
        }

     </script>


 
}




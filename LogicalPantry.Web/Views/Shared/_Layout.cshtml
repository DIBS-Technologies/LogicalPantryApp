@using System.Security.Claims;
@{
    var tenantName = ViewBag.TenantName as string;
    var tenantId = ViewBag.TenantId;
    var pagename = ViewBag.PageName as string;
    var isUser = User.IsInRole("User");
    var claimsIdentityRole = System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType.Trim();
    var userClaim = User.Claims
                .Where(c => c.Type == ClaimTypes.Role)
                .Select(c => c.Value).ToList();
    bool isAdmin = userClaim.Contains("Admin");

    tenantId = TempData["TenantId"];
    pagename = TempData["PageName"] as string;
    var isAuthenticated = User.Identity.IsAuthenticated;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - LogicalPantry.Web</title>
    <link href="~/css/style.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.3/dist/sweetalert2.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <style>
        html, body {
            height: 100%;
            margin: 0;
        }

        body {
            display: flex;
            flex-direction: column;
            font-family: Arial, sans-serif;
        }

        #layoutSidenav {
            display: flex;
            flex-direction: column;
            flex: 1; /* Allows the layout to fill available space */
        }

        #layoutSidenav_content {
            flex: 1; /* Allows the main content to grow and shrink */
            padding: 10px;
        }

        footer {
            display: flex;
            justify-content: center;
            padding: 1rem;
            background-color: #f1f1f1;
            color: #000;
            margin-top: auto; /* Pushes the footer to the bottom */
            width: 100%;
        }

        /* Styles for navigation and layout */
        .topnav {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0 1rem;
            background-color: #fff;
            height: 60px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            box-sizing: border-box;
        }

            .topnav .navbar-nav {
                display: flex;
                flex-wrap: wrap;
                gap: 1rem;
            }

            .topnav .nav-link {
                font-weight: normal;
                transition: color 0.3s, font-weight 0.3s;
            }

                .topnav .nav-link:hover {
                    color: #0061f2;
                    font-weight: bold;
                }

        .page-name {
            flex: 1;
            text-align: center;
            font-weight: bold;
            color: #1f2d41;
            font-size: 1.25rem;
        }

        #layoutSidenav_nav {
            display: @(isAdmin ? "block" : "none");
            flex-shrink: 0;
        }

        .sidenav {
            background-color: #fff;
            color: #1f2d41;
            box-shadow: 2px 0 4px rgba(0, 0, 0, 0.1);
        }

        .sidenav-menu {
            padding: 1rem;
        }

            .sidenav-menu .nav-link {
                display: block;
                padding: 0.5rem 1rem;
                color: #1f2d41;
                text-decoration: none;
            }

                .sidenav-menu .nav-link:hover {
                    background-color: #f1f1f1;
                    border-radius: 0.2rem;
                }

        /* Media Queries */
        @@media (max-width: 768px) {
            .topnav {
                flex-direction: column;
                align-items: flex-start;
            }

                .topnav .navbar-nav {
                    flex-direction: column;
                    width: 100%;
                }

            .sidenav {
                position: absolute;
                top: 50px;
                left: 0;
                width: 100%;
                height: calc(100vh - 60px);
                overflow-y: auto;
            }

            #layoutSidenav_content {
                margin-left: 0;
            }
        }

        @@media (min-width: 769px) {
            .sidenav {
                width: 250px;
                position: fixed;
                bottom: 0;
            }

            #layoutSidenav_content {
                margin-left: 250px;
            }
        }
    </style>
</head>
<body class="nav-fixed">
    <nav class="topnav navbar navbar-expand shadow navbar-light bg-white" id="sidenavAccordion">
        <div class="tenantImage">
            <img id="logoImage" src="" style="width: 95px; padding-left: 10px; opacity: 100%;" />
        </div>
        <div class="page-name" id="pageName">
            @(!string.IsNullOrEmpty(pagename) ? pagename.Replace(".html", " ") : "")
        </div>
        <div class="navbar-nav">
            @if (isAuthenticated && (isAdmin || User.IsInRole("User")))
            {
                <a class="nav-link" href="/@tenantName/TimeSlot/UserCalendar" id="pickUp">Pickup</a>
            }
            <a class="nav-link" href="/@tenantName/Donation/PayPal">Donation</a>
            <a class="nav-link" href="/@tenantName/Auth/LoginView">Login</a>
            <input id="page" type="hidden" name="name" value="@TempData["PageName"]" />
            <input type="hidden" value="@isUser" id="isUser" />
            @if (User.Identity.IsAuthenticated)
            {
                var userEmail = User.FindFirstValue(ClaimTypes.Email) ?? User.Claims.FirstOrDefault(c => c.Type == "preferred_username")?.Value;
                var userName = User.FindFirstValue(ClaimTypes.Name) ?? User.Claims.FirstOrDefault(c => c.Type == "name")?.Value;
                @* <p>@userName</p> *@
            }
        </div>
    </nav>

    <div id="layoutSidenav">
        <div id="layoutSidenav_nav">
            @if (isAdmin)
            {
                <nav class="sidenav shadow-right sidenav-light">
                    <div class="sidenav-menu">
                        <div class="nav accordion" id="accordionSidenav">
                            <div class="sidenav-menu-heading">Main Menu</div>
                            <a class="nav-link" href="/@tenantName/TimeSlot/Calendar">Pickup Slots</a>
                            <a class="nav-link" href="/@tenantName/Information/AddTenant">Information</a>
                            <a class="nav-link" href="/@tenantName/User/ManageUsers">Users</a>
                        </div>
                    </div>
                </nav>
            }
        </div>

        <div id="layoutSidenav_content">
            <main>
                <main role="main" class="pb-3">
                    @RenderBody()
                </main>
            </main>
            <footer>
                <div class="container-end">
                    <p class="mb-0">&copy; @DateTime.Now.Year - LogicalPantry</p>
                </div>
            </footer>
        </div>
    </div>
    @section Scripts {
        <script>
            $(document).ready(function () {
                function fetchImageUrl(tenantId) {
                    return new Promise((resolve, reject) => {
                        $.ajax({
                            url: `/@tenantName/Information/Get`,
                            method: "GET",
                            data: { tenantid: tenantId },
                            success: function (response) {
                                const imageUrl = response;

                                if (imageUrl) {
                                    const tenantDiv = $('.tenantImage');

                                    if (tenantDiv.length > 0) {
                                        // Remove any existing image with the same ID to avoid duplicates
                                        tenantDiv.find('#logoImage').remove();

                                        // Create a new img element
                                        const img = $('<img>', {
                                            id: 'logoImage',
                                            src: imageUrl,
                                            style: 'width: 95px; padding-left: 10px; opacity: 100%;'
                                        });

                                        // Append the new img element to the div
                                        tenantDiv.append(img);

                                        resolve(imageUrl);
                                    } else {
                                        console.error("No element found with class 'tenantImage'");
                                        reject(new Error("No element found with class 'tenantImage'"));
                                    }
                                } else {
                                    console.error("ImageUrl is missing in the response");
                                    reject(new Error("ImageUrl is missing in the response"));
                                }
                            },
                            error: function (xhr, status, error) {
                                console.error("Cannot find Image src", status, error);
                                reject(new Error(`Cannot find Image src: ${status} ${error}`));
                            }
                        });
                    });
                }

                async function updateImage(tenantId) {
                    try {
                        await fetchImageUrl(tenantId);
                    } catch (error) {
                        console.error("Failed to update image", error);
                    }
                }

                var tenantIdString = sessionStorage.getItem('TenantId');
                var pageName = sessionStorage.getItem('PageName');

                // Convert tenantId to an integer
                var tenantId = parseInt(tenantIdString, 10);
                updateImage(tenantId);

                var handlerValue = $("#page").val();
                $(".page-name").text(pageName ? pageName.replace('.html', ' ') : '');

                if ($("#isUser").val() === "True") {
                    $("#layoutSidenav_nav").remove();
                }
            });
        </script>
    }
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.3/dist/sweetalert2.all.min.js" crossorigin="anonymous"></script>
    @await RenderSectionAsync("Scripts", required: false)
    @await RenderSectionAsync("Styles", required: false)
</body>
</html>
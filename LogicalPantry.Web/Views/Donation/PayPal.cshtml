@using Microsoft.Extensions.Configuration
@using System.Security.Claims
@inject IConfiguration Configuration

@{
    ViewData["Title"] = "Pay with PayPal";
    var isAuthenticated = User.Identity.IsAuthenticated;
    var isUser = User.IsInRole("User");
    var userClaims = User.Claims
                .Where(c => c.Type == ClaimTypes.Role)
                .Select(c => c.Value).ToList();

    bool isAdmin = userClaims.Contains("Admin");
}



<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pay with PayPal</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        .card {
            width: 100%;
            max-width: 800px; /* Increase card width for larger screens */
            margin: auto;
        }

        .card-header {
            text-align: center;
            font-weight: 500;
            font-size: 22px;
        }

        .form-group {
            margin-bottom: 1rem;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
        }

        .form-group .form-control {
            width: 100%;
        }

        .saveButton {
            background-color: #1A2A52;
            color: white;
            border-radius: 5px;
            border: none;
            font-size: 1rem;
            padding: 0.5rem 2rem;
            margin-top: 1rem;
        }

        #saveButtonDiv {
            display: flex;
            justify-content: center;
        }

        .error-message {
            color: red;
            font-size: 0.875rem;
            margin-top: 0.5rem;
        }

        .centered-content {
            display: flex;
            justify-content: center; /* Center content horizontally */
            align-items: center; /* Center content vertically */
            width: 100vw; /* Full viewport width */
            margin-top: 3.25%; /* Remove default margins */
        }

        .container {
            max-width: 800px; /* Adjust as needed for larger screens */
            width: 100%; /* Full width of parent */
            margin-left: auto;
            margin-right: auto; /* Center horizontally */
            padding: 0 1rem; /* Optional: Add padding for smaller screens */
        }

        .admin-content {
            margin-left: 0; /* No left margin for admin users */
        }

        .centered-content {
            display: flex;
            justify-content: center; /* Center content horizontally */
            align-items: center; /* Center content vertically */
            width: 100vw; /* Full viewport width */
            margin-top: 3.25%;
           
        }

        centered-content {
            display: flex;
            justify-content: center; /* Center content horizontally */
            align-items: center; /* Center content vertically */
            width: 100vw; /* Full viewport width */
            margin-top: 3.25%; /* Remove default margins */
        }


        .container {
            max-width: 800px; /* Adjust as needed for larger screens */
            width: 100%; /* Full width of parent */
            margin-left: auto;
            margin-right: auto; /* Center horizontally */
            padding: 0 1rem; /* Optional: Add padding for smaller screens */
        }

        .left-aligned-content {
            display: flex;
            justify-content: flex-start; /* Align content to the left */
            align-items: center; /* Center content vertically */
            width: 100vw; /* Full viewport width */
            margin-top: 3.25%;
           
        }

        .container {
            max-width: 800px; /* Adjust as needed for larger screens */
            width: 100%; /* Full width of parent */
            margin: 0; /* No margin by default, handled by flex container */
            padding: 0 1rem; /* Optional: Add padding for smaller screens */
        }

        @@media (max-width: 576px) {
            .card {
                padding: 1rem;
            }

            .card-header {
                font-size: 1.5rem;
            }

            .saveButton {
                font-size: 0.875rem;
                padding: 0.5rem 1rem;
            }

            .form-group {
                flex-direction: column;
                align-items: flex-start;
            }

            .form-group label {
                margin-right: 0;
                margin-bottom: 0.25rem;
            }
        }
    </style>
</head>
<body>
    <div id="content" class="centered-content">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-lg-8 col-md-10 col-sm-12">
                    <div class="card mb-4">
                        <div class="card-header">
                            Pay with PayPal
                        </div>
                        <div class="card-body">
                            <form id="hiddenForm">
                                <div class="form-group">
                                    <label for="amount">Enter amount:</label>
                                    <input type="number" id="amount" class="form-control" name="amount" step="0.01" min="0" required />
                                    <span id="amount-error" class="error-message" style="display: none;">Please enter a valid amount.</span>
                                </div>
                                <div id="saveButtonDiv">
                                    <button class="saveButton" id="pay-button" type="button">Pay with PayPal</button>
                                </div>
                            </form>
                            <div id="paypal-button-container" style="display: none;"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://www.paypal.com/sdk/js?client-id=@Configuration["PayPal:ClientId"]"></script>
    <script>
      
            document.addEventListener('DOMContentLoaded', function () {

                debugger
                var isAuthenticated = @Html.Raw(Json.Serialize(User.Identity.IsAuthenticated));
                var isUser = @Html.Raw(Json.Serialize(User.IsInRole("User")));
                var isAdmin = @Html.Raw(Json.Serialize(User.Claims.Any(c => c.Type == ClaimTypes.Role && c.Value == "Admin")));

                var content = document.getElementById('content');

                if (isAuthenticated) {
                    if (isAdmin) {
                        content.classList.add('left-aligned-content'); // Align content to the left for admins
                    } else if (isUser) {
                        content.classList.add('centered-content'); // Center content for regular users
                    }
                } else {
                    content.classList.add('centered-content'); // Center content for non-authenticated users
                }
            });
    


        document.getElementById('pay-button').addEventListener('click', function (event) {
            event.preventDefault();

            var amount = document.getElementById('amount').value;
            var errorMessage = document.getElementById('amount-error');

            if (!amount || amount <= 0) {
                errorMessage.style.display = 'block';
                return;
            }

            errorMessage.style.display = 'none';

            document.getElementById('hiddenForm').style.display = 'none';
            document.getElementById('paypal-button-container').style.display = 'block';

            paypal.Buttons({
                createOrder: function (data, actions) {
                    return actions.order.create({
                        purchase_units: [{
                            amount: {
                                value: amount
                            }
                        }]
                    });
                },
                onApprove: function (data, actions) {
                    return actions.order.capture().then(function (details) {
                        alert('Transaction completed by ' + details.payer.name.given_name);
                    });
                },
                onCancel: function (data) {
                    alert('Transaction was cancelled');
                },
                onError: function (err) {
                    console.error(err);
                    alert('An error occurred during the transaction');
                }
            }).render('#paypal-button-container');
        });
    </script>
</body>
</html>

@model LogicalPantry.Models.Models.User
@using System.Security.Claims;
@{
    ViewData["Title"] = "Create Tenant";
    var tenantName = ViewBag.TenantName as string;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Register</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/4.5.2/css/bootstrap.min.css">
    <link href="~/css/StyleSheet.css" />
    <link rel="stylesheet" href="~/css/StyleSheet.css">
    <style>
        .card {
            width: 100%;
            max-width: 800px;
            margin: auto;
        }

        .container-fluid {
            max-width: 90%;
            margin: 10px auto;
        }

        .card-header {
            text-align: center;
            font-weight: 500;
            padding: 1.5%;
        }

        .form-group {
            margin-bottom: 1rem;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
        }

        .form-group .form-control {
            width: 100%;
        }

        .saveButton {
            background-color: #1A2A52;
            color: white;
            border-radius: 5px;
            border: none;
            font-size: 1rem;
            padding: 0.5rem 2rem;
            margin-top: 1rem;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        #saveButtonDiv {
            display: flex;
            justify-content: end;
        }

        .container {
            padding: 2rem;
        }

        #tenantInfoContainer {
            margin-top: -3%;
            padding-top: 0;
        }
    </style>
</head>
<body>
    <div class="container mt-4" id="tenantInfoContainer">
        <div class="row">
            <div class="col-lg-12">
                <div class="card mb-4">
                    <div class="card-header">
                        Registration
                    </div>
                    <div class="card-body">
                        @if (!string.IsNullOrEmpty(TempData["SuccessMessageUser"] as string))
                        {
                            <div id="successMessageUser" class="alert @TempData["MessageClass"]">
                                @TempData["SuccessMessageUser"]
                            </div>
                        }

                        @if (!string.IsNullOrEmpty(TempData["ErrorMessageUser"] as string))
                        {
                            <div id="errorMessageUser" class="alert @TempData["MessageClass"]">
                                @TempData["ErrorMessageUser"]
                            </div>
                        }

                        <form method="post" id="register" action="/@tenantName/Registration/Register">
                            <div class="form-group">
                                <label for="FullName">Name<span class="mandatory">*</span></label>
                                <input name="FullName" class="form-control" id="FullName" placeholder="Enter Name" />
                                <span class="text-danger errorfont" id="FullName-error"></span>
                            </div>
                            <div class="form-group">
                                <label for="Address">Address<span class="mandatory">*</span></label>
                                <input name="Address" class="form-control" id="Address" placeholder="Enter Address" />
                                <span class="text-danger errorfont" id="Address-error"></span>
                            </div>
                            <div class="form-group">
                                @{
                                    var userEmails = User.FindFirstValue(ClaimTypes.Email);
                                }
                                <label for="Email">Email<span class="mandatory">*</span></label>
                                <input type="email" name="Email" value="@userEmails" class="form-control" id="Email" placeholder="Enter Email" disabled/>
                                <input type="hidden" name="Email" value="@userEmails" />
                                <span class="text-danger errorfont" id="Email-error"></span>
                            </div>
                            <div class="form-group">
                                <label for="PhoneNumber">Phone Number<span class="mandatory">*</span></label>
                                <input type="tel" name="PhoneNumber" class="form-control" id="PhoneNumber" placeholder="Enter Phone Number" />
                                <span class="text-danger errorfont" id="PhoneNumber-error"></span>
                            </div>

                            <div id="saveButtonDiv">
                                <button class="saveButton" type="submit" onclick="return validateForm();">Register</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#FullName, #Address, #Email, #PhoneNumber').on('blur change keyup', function () {
                validateField(this);
            });
        });

        function validateField(field) {
            var isValid = true;
            var id = $(field).attr('id');
            var value = $(field).val().trim();
            var errorId = '#' + id + '-error';

            switch (id) {
                case 'FullName':
                    if (value === "") {
                        $(errorId).text("Name is required.").show();
                        isValid = false;
                    } else {
                        $(errorId).text("").hide();
                    }
                    break;
                case 'Address':
                    if (value === "") {
                        $(errorId).text("Address is required.").show();
                        isValid = false;
                    } else {
                        $(errorId).text("").hide();
                    }
                    break;
                case 'Email':
                    if (value === "") {
                        $(errorId).text("Email is required.").show();
                        isValid = false;
                    } else if (!isValidEmail(value)) {
                        $(errorId).text("Invalid Email format.").show();
                        isValid = false;
                    } else {
                        $(errorId).text("").hide();
                    }
                    break;
                case 'PhoneNumber':
                    if (value === "") {
                        $(errorId).text("Phone Number is required.").show();
                        isValid = false;
                    } else if (!isValidPhone(value)) {
                        $(errorId).text("Invalid Phone Number format.").show();
                        isValid = false;
                    } else {
                        $(errorId).text("").hide();
                    }
                    break;
            }

            return isValid;
        }

        function validateForm() {
            var isValid = true;

            $('#FullName, #Address, #Email, #PhoneNumber').each(function () {
                if (!validateField(this)) {
                    isValid = false;
                }
            });

            return isValid;
        }

        function isValidEmail(email) {
            var emailRegex = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
            return emailRegex.test(email);
        }

        function isValidPhone(phone) {
            var phoneRegex = /^\d{10}$/; // Adjust this regex based on the phone number format you expect
            return phoneRegex.test(phone);
        }
    </script>
</body>
</html>

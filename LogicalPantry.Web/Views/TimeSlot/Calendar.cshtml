@{
    var tenantName = ViewBag.TenantName as string;

}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>Calendar</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/css/jquery-calendar.min.css">
    <style>
      

        .calendar-header {
            margin-bottom: 20px;
            display: flex;
            justify-content: space-around;
            align-items: center;
        }
        .dropdown-menu {
            max-height: 2.5rem;
            overflow-y: auto;
            white-space: nowrap;
            width: 200px;
        }

        .dropdown-item {
            white-space: nowrap;
        }

        .dropdown {
            position: relative;
            display: inline-block;
        }

        .dropdown-menu {
            display: none;
            position: absolute;
            background-color: #fff;
            border: 1px solid #ccc;
            z-index: 1000;
        }

            .dropdown-menu.show {
                display: block;
            }

        select {
            display: block;
            width: 100%;
        }

        .calendar-categories {
            margin-bottom: 10px;
            overflow-x: auto;
            width: 100%;
            margin: 12px;
            z-index: 10;
        }

        .badge {
            display: inline-block;
            padding: .25em .4em;
            font-size: 75%;
            font-weight: 700;
            line-height: 1;
            text-align: center;
            white-space: nowrap;
            vertical-align: baseline;
            padding: 7px;
            border-radius: .25rem;
            transition: color .15s ease-in-out, background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out;
        }

        .row > * {
            flex-shrink: 0;
            max-width: 100%;
            padding-right: calc(var(--bs-gutter-x)* .5);
            padding-left: calc(var(--bs-gutter-x)* .5);
            margin-top: var(--bs-gutter-y);
        }

        .container-fluid {
            max-width: 90%;
            margin-top: 50px;
            margin: 50px auto;
        }

        h3 {
            margin: 0;
        }

        #calendar {
            margin-top: 20px;
        }

        /* New CSS */
        .dropdown select {
            display: inline-block;
            width: 200px; /* Adjust width as needed */
            margin-right: 10px; /* Reduce gap between select and button */
        }

        .btn-success {
            margin-left: 0; /* Remove extra margin if not needed */
        }

        .calendar-header .d-flex {
            align-items: center;
            gap: 10px; /* Adjust gap between select and button */
        }

        /* Arrow styling */
        .btn.btn-sm.btn-light.btn-move-calendar:before {
            font-size: 30;
            margin: 0 2px;
           
        }
        /* Left arrow direction */
        .btn.btn-sm.btn-light.btn-move-calendar[data-direction="left"]:before {
            content: "\2190";
           
        }

        /* Right arrow direction */
        .btn.btn-sm.btn-light.btn-move-calendar[data-direction="right"]:before {
            content: "\2192";
        }

        /* Button hover effect */
        .btn.btn-sm.btn-light.btn-move-calendar:hover {
            background-color: #f0f0f0;
            border-color: #333;
            color: black;
        }

        .btn.btn-sm.btn-default.btn-move-calendar {
            background-color: white; 
            border: 2px solid black;
            padding: 10px 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 4px;
        }

    </style>
</head>

<body>
    <div class="container-fluid">
        <div class="calendar-header">
            <h3>TimeSlot </h3>
            <div class="d-flex align-items-center">
                <div class="dropdown d-inline">
                    <select id="eventSelect" class="form-control" onchange="handleSelectChange()">
                        <option value="" selected disabled>Type</option>
                        <option value="1" data-title="Food Pickup">Food Pickup</option>
                        <option value="2" data-title="Volunteer">Volunteer</option>
                        <option value="3" data-title="Appointment">Appointment</option>
                    </select>
                </div>
                <button type="button" class="btn btn-success" id="addEventBtn">Add Event</button>
            </div>
        </div>

        <div class="row">
            <div class="col">
                <div id="calendar"></div>
            </div>
        </div>

        <!-- Bootstrap Modal for Event Details -->
        <div class="modal fade" id="eventModal" tabindex="-1" role="dialog" aria-labelledby="eventModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="eventModalLabel">Event Details</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <form id="eventForm">
                            <div class="form-group">
                                <label for="eventTitle">Title:</label>
                                <input type="text" class="form-control" id="eventTitle" name="Title" required>
                            </div>
                            <div class="form-group">
                                <label for="eventStart">Start Date and Time:</label>
                                <input type="datetime-local" class="form-control" id="eventStart" name="StartDateTime" required>
                            </div>
                            <div class="form-group">
                                <label for="eventEnd">End Date and Time:</label>
                                <input type="datetime-local" class="form-control" id="eventEnd" name="EndDateTime" required>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" id="saveEventBtn">Save</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/moment.js/moment-with-locales.min.js"></script>
    <script src="~/jquery.touchswipe/jquery.touchswipe.min.js"></script>
    <link rel="stylesheet" href="~/css/jquery-calendar.min.css">
    <script src="~/js/jquery-calendar.min.js"></script>

    <script>
        $(document).ready(function () {
            debugger;
            var events = @Html.Raw(Json.Serialize(Model.Events));          

            $('#calendar').Calendar({
                locale: 'en',
                weekday: {
                    timeline: {
                        intervalMinutes: 30,
                        fromHour: 9
                    }
                },
                events: events,
                view: 'week',                
                defaultView: {
                    largeScreen: 'week',
                    smallScreen: 'day',
                    smallScreenThreshold: 1000
                },
                weekday: {
                    timeline: {
                        fromHour: 10,
                        toHour: 20,
                        intervalMinutes: 60,
                        format: 'HH:mm',
                        heightPx: 50,
                        autoResize: true
                    },
                    dayline: {
                        weekdays: [0, 1, 2, 3, 4, 5, 6],
                        format: 'MM/DD',
                        heightPx: 31,
                        month: {
                            format: 'MMMM YYYY',
                            heightPx: 30,
                            weekFormat: 'w'
                        }
                    }
                },
                month: {
                    format: 'MMMM YYYY',
                    heightPx: 31,
                    weekline: {
                        format: 'w',
                        heightPx: 80
                    },
                    dayheader: {
                        weekdays: [0, 1, 2, 3, 4, 5, 6],
                        format: 'dddd',
                        heightPx: 30
                    },
                    day: {
                        format: 'MM/DD'
                    }
                },
                unixTimestamp: moment().format('X'),
                event: {
                    hover: {
                        delay: 5000000
                    },
                
                }

            }).init();

            $('#addEventBtn').on('click', function () {
                $('#eventModal').modal('show');
            });

            $('#saveEventBtn').on('click', function () {
                var eventData = {
                    timeSlotName: $('#eventTitle').val(),
                    startTime: $('#eventStart').val(),
                    endTime: $('#eventEnd').val()
                };

                $.ajax({
                    url: 'AddEvent',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(eventData),
                    success: function (response) {
                        alert('Event added successfully!');
                        $('#eventModal').modal('hide');
                    },
                    error: function (xhr, status, error) {
                        alert('Error adding event: ' + error);
                    }
                });
            });

            $('#calendar').on('Calendar.event-click', function (event, instance, elem, evt) {
             
                // $('#calendar-modal').attr
                var startTime = evt.start;
                var endTime = evt.end;
                var timeSlotName = evt.title;

                // Convert Unix timestamps to ISO format
                var startTimeISO = new Date(startTime * 1000).toISOString();
                var endTimeISO = new Date(endTime * 1000).toISOString();

                // Get time slot ID using the extracted details
                $.ajax({
                    url: 'GetTimeSlotId',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        StartTime: startTimeISO,
                        EndTime: endTimeISO,
                        TimeSlotName: timeSlotName
                    }),
                    success: function (response) {
                        if (response && response.timeSlotId) {
                            // Redirect to EditTimeSlotUser with the time slot ID
                            window.location.href = 'EditTimeSlotUser?id=' + response.timeSlotId;
                        } else {
                            alert('Time slot not found.');
                        }
                    },
                    error: function (xhr, status, error) {
                        alert('Error retrieving time slot ID: ' + error);
                    }
                });
            });

            
            function handleSelectChange() {
                var selectedOption = $('#eventSelect option:selected');
                var selectedEventId = selectedOption.val();
                var selectedEventTitle = selectedOption.data('title');
            }
        });
    </script>
</body>

</html>

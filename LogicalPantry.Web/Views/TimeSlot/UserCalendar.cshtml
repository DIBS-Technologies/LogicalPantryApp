@using System.Security.Claims;
@model LogicalPantry.DTOs.TimeSlotDtos.UserCalendarDto


@{
    var tenantName = ViewBag.TenantName as string;
   // Layout = User.IsInRole("User") ? "~/Shared/_UserLayout.cshtml" : "~/Shared/_Layout.cshtml";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>Calendar</title>

    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/css/jquery-calendar.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.css">
   @*  <link href="//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css" rel="stylesheet"> *@

    <style>

        /* Ensure calendar events have a fixed z-index */
        /* Remove hover styles */

        /* .calendar-event {
            height: auto !important;
            overflow: hidden;
            position: relative;
            white-space: nowrap;
            text-overflow: ellipsis;
        }

            .calendar-event:hover {
                top: 477.458px !important;
                left: 0% !important;
                width: 100% !important;
                z-index: auto !important;
                height: 101px !important;
                height: auto !important;
                
            } */

       
/* 
        .calendar-event {
     
            height: auto !important;
             overflow: hidden; 
            position: relative;
            white-space: nowrap;
             text-overflow: ellipsis; 
        }

         
            .calendar-event:hover {
                height: auto !important;
          
                 overflow: hidden; 
                position: relative;
                white-space: nowrap;
                 text-overflow: ellipsis; 
            }

        .calendar.event-mouseleave
        {
            height: auto !important;

            overflow: hidden;
            position: relative;
            white-space: nowrap;
            text-overflow: ellipsis;
        } */


        #layoutSidenav_content {
            margin-left: -200px;
        }

        .backgr {
            background-color: grey;
            opacity: 0.5;
        }
        .modal-content {
            background: none;
            display: none;
            width: 100px;
            height: 100px;
        }   
        .modal.fade {
            background: none;
            display: none !important; 
        }      
        .modal-backdrop {
            opacity: 0 !important; 
            display: none !important; 
        }  

        .modal {
            background: none;
            overflow-y: visible;
            overflow-x:visible;
        }
        .calendar-header {
            margin-bottom: 20px;
            display: flex;
            justify-content: space-around;
            align-items: center;
        }

        .dropdown-menu {
            max-height: 2.5rem;
            overflow-y: auto;
            white-space: nowrap;
            width: 200px;
        }

        .dropdown-item {
            white-space: nowrap;
        }

        .dropdown {
            position: relative;
            display: inline-block;
        }

        .dropdown-menu {
            display: none;
            position: absolute;
            background-color: #fff;
            border: 1px solid #ccc;
            z-index: 1000;
        }

            .dropdown-menu.show {
                display: block;
            }

        select {
            display: block;
            width: 100%;
        }

        .calendar-categories {
            margin-bottom: 10px;
            overflow-x: auto;
            width: 100%;
            margin: 12px;
            z-index: 10;
        }


        .badge {
            display: inline-block;
            padding: .25em .4em;
            font-size: 75%;
            font-weight: 700;
            line-height: 1;
            text-align: center;
            white-space: nowrap;
            vertical-align: baseline;
            padding: 7px;
            border-radius: .25rem;
            transition: color .15s ease-in-out, background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out;
        }

        .row > * {
            flex-shrink: 0;
            max-width: 100%;
            padding-right: calc(var(--bs-gutter-x)* .5);
            padding-left: calc(var(--bs-gutter-x)* .5);
            margin-top: var(--bs-gutter-y);
        }

        .container-fluid {
            max-width: 90%;
            margin-top: 50px;
            margin: 50px auto;
        }

        h3 {
            margin: 0;
        }

        #calendar {
            margin-top: 20px;
        }

        /* New CSS */
        .dropdown select {
            display: inline-block;
            width: 200px; /* Adjust width as needed */
            margin-right: 10px; /* Reduce gap between select and button */
        }

        .btn-success {
            margin-left: 0; /* Remove extra margin if not needed */
        }

        .calendar-header .d-flex {
            align-items: center;
            gap: 10px; /* Adjust gap between select and button */
        }
       /*  .modal-c2 {
            background-color: #fff;
        } */

        .modal-c2 {
            background-color: #c1c1c1;
            
        }

        .modal .fade2
        {
            background-color: #00000F;
        }

        .calendar-timeline
         {
            padding-top: 41px;
            margin-top: 60px;
     
         }  

            /* Arrow styling */
            .btn.btn-sm.btn-light.btn-move-calendar:before {
                font-size: 30;
                margin: 0 2px;
            }
            /* Left arrow direction */
            .btn.btn-sm.btn-light.btn-move-calendar[data-direction="left"]:before {
                content: "\2190";
            
            }

            /* Right arrow direction */
            .btn.btn-sm.btn-light.btn-move-calendar[data-direction="right"]:before {
                content: "\2192";
           
            }

        /* Button hover effect */
        .btn.btn-sm.btn-light.btn-move-calendar:hover {
            background-color: #f0f0f0;
            border-color: #333; 
            color: black;
        }

        .btn.btn-sm.btn-default.btn-move-calendar {
            background-color: white; 
            border: 2px solid black;
            padding: 10px 20px; 
            display: flex;
            align-items: center; 
            justify-content: center; 
            border-radius: 4px; 
        }

        /* 8/21/2024 */
        body.modal-open {
            overflow-x: hidden;
            overflow-y: auto;
        }


        .topnav .navbar-nav {
            font-size: 15px;
            display: flex;
            flex-direction: row;
            margin-left: auto;
        }

         
        
    </style>
</head>
<body>

    <div class="container-fluid">
        <div class="calendar-header">
            <h3>Pickups</h3>
            @{
                var userEmails = User.FindFirstValue(ClaimTypes.Email);
            }
            <input type="hidden" name="Email" value="@userEmails" class="form-control" id="Email" placeholder="Enter Email" disabled />
           
           

        </div>

        <div class="row">
            <div class="col">
                <div id="calendar"></div>
            </div>
        </div>
            <!-- Modal for displaying messages -->
            <div class="modal fade2" id="messageModal" tabindex="-1" aria-labelledby="messageModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-c2">
                        <div class="modal-header">
                            <h5 class="modal-title" id="messageModalLabel">Message</h5>
                           
                        </div>
                        <div class="modal-body" id="messageModalBody">
                            <!-- Message will be inserted here -->
                        </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                    </div>
                </div>
            </div>
   
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/moment.js/moment-with-locales.min.js"></script>
    <script src="~/jquery.touchswipe/jquery.touchswipe.min.js"></script>
    <script src="~/js/jquery-calendar.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js"></script>
    <script>
        $(document).ready(function () {
        
            var events = @Html.Raw(Json.Serialize(Model.Events));


            $('#calendar').Calendar({
                locale: 'en',
                weekday: {
                    timeline: {
                        intervalMinutes: 30,
                        fromHour: 9,
                        toHour: 20
                    }
                },
                events: events,
                view: 'week',
                defaultView: {
                    largeScreen: 'week',
                    smallScreen: 'day',
                    smallScreenThreshold: 1000
                },
                weekday: {
                    timeline: {
                        fromHour: 7,
                        toHour: 20,
                        intervalMinutes: 30,
                        format: 'HH:mm',
                        heightPx: 50,
                        autoResize: true
                    },
                    dayline: {
                        weekdays: [0, 1, 2, 3, 4, 5, 6],
                        format: 'MM/DD',
                        heightPx: 31,
                        month: {
                            format: 'MMMM YYYY',
                            heightPx: 30,
                            weekFormat: 'w'
                        }
                    }
                },
                month: {
                    format: 'MMMM YYYY',
                    heightPx: 31,
                    weekline: {
                        format: 'w',
                        heightPx: 80
                    },
                    dayheader: {
                        weekdays: [0, 1, 2, 3, 4, 5, 6],
                        format: 'dddd',
                        heightPx: 30
                    },
                    day: {
                        format: 'MM/DD'
                    }
                },
                unixTimestamp: moment().format('X'),
                event: {
                    hover: {
                        delay: 500000
                    }
                }

         
            }).init();



            

            // Handle calendar event click and prevent default behavior
            $('#calendar').on('Calendar.event-click', function (event, instance, elem, evt) {
                       
               
                var startTime = evt.start;
                var endTime = evt.end;
                var timeSlotName = evt.title;

                var startTimeISO = new Date(startTime * 1000).toISOString();
                var endTimeISO = new Date(endTime * 1000).toISOString();

                // Retrieve time slot ID based on the event details
                $.ajax({
                    url: 'GetTimeSlotId',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        StartTime: startTimeISO,
                        EndTime: endTimeISO,
                        TimeSlotName: timeSlotName
                    }),
                    success: function (response) {
                        // $('#modal-content').css('display', 'None');
                        if (response && response.timeSlotId) {
                            // Get user email from the claims
                            var userEmail = $('#Email').val();

                            // Retrieve user ID based on email
                            $.ajax({
                                url: '/@tenantName/User/GetUserIdByEmail',
                                type: 'POST',
                                contentType: 'application/json',
                                data: JSON.stringify({ Email: userEmail }),
                                success: function (userResponse) {
                                    
                                    if (userResponse && userResponse.userId) {
                                        // Sign up for the time slot
                                        $.ajax({
                                            url: '/@tenantName/TimeSlotSignup/AddTimeSlotSignUps',
                                            type: 'POST',
                                            contentType: 'application/json',
                                            data: JSON.stringify({
                                                TimeSlotId: response.timeSlotId,
                                                UserId: userResponse.userId,
                                                Attended: false
                                            }),
                                            success: function (signupResponse) {
                                                showMessage(signupResponse.message);
                                                // Delay redirection by 2 seconds
                                               // setTimeout(function () {
                                                   // window.location.href = '/@tenantName/TimeSlot/UserCalendar';
                                                //}, 3000); // 2000 milliseconds = 2 seconds
                                            },
                                            error: function (xhr, status, error) {
                                                var response = xhr.responseJSON;
                                                showMessage(response ? response.message : error, true);
                                            }
                                        });
                                    } else {
                                        showMessage('User not found.', true);
                                    }
                                },
                                error: function (xhr, status, error) {
                                    showMessage('Error retrieving user ID: ' + error, true);
                                }
                            });
                        } else {
                            showMessage('Time slot not found.', true);
                        }
                    },
                    error: function (xhr, status, error) {
                        showMessage('Error retrieving time slot ID: ' + error, true);
                    }
                });
            });

          
        });



        // // Function to show a message in a Bootstrap modal
        // function showMessage(message, isError) {
          
        //     var modalTitle = isError ? 'Error' : 'Success';
        //     var modalClass = isError ? 'text-danger' : 'text-success';

        //     $('#messageModalLabel').text(modalTitle);
        //     $('#messageModalBody').text(message).removeClass('text-success text-danger').addClass(modalClass);          
        //     $('#messageModal').modal('show');


        //    // $(".nav-fixed").addClass("backgr");


           

        //     // Hide the modal with a fade-out effect after 1 second
        //     setTimeout(function () {
        //         $('#messageModal').fadeOut(1000, function () {
        //             $('#messageModal').modal('hide'); // Hide the modal
        //             $('#messageModal').css('display', 'none'); // Reset display property for future use
        //             //$(".nav-fixed").removeClass("backgr");
        //         });
        //     }, 2000); // 1000 milliseconds = 1 second
           
        // }


        function showMessage(message, isError) {
            var modalTitle = isError ? 'Error' : 'Success';
            var modalClass = isError ? 'text-danger' : 'text-success';

            $('#messageModalLabel').text(modalTitle);
            $('#messageModalBody').text(message).removeClass('text-success text-danger').addClass(modalClass);
            $('#messageModal').modal({
                backdrop: 'static', // Prevent closing the modal by clicking outside
                keyboard: false     // Prevent closing the modal with the keyboard
            });

            // Show the modal
            $('#messageModal').modal('show');

            // Prevent horizontal scroll bar
            $('body').css({
                'overflow-y': 'auto',
                'overflow-x': 'hidden'
            });

            // Hide the modal with a fade-out effect after 2 seconds
            setTimeout(function () {
                $('#messageModal').fadeOut(1000, function () {
                    $('#messageModal').modal('hide'); // Hide the modal
                    $('#messageModal').css('display', 'none'); // Reset display property for future use
                    // Restore the scroll behavior after the modal is hidden
                    $('body').css({
                        'overflow-y': 'auto',
                        'overflow-x': 'hidden'
                    });
                });
            }, 2000); // 2000 milliseconds = 2 seconds
        }

        
     
    </script>

</body>
</html>

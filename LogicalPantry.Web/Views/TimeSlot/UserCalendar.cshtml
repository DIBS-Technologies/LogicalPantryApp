@using System.Security.Claims;
@model LogicalPantry.DTOs.TimeSlotDtos.UserCalendarDto

@{
    var tenantName = ViewBag.TenantName as string;
    var pagename = ViewBag.PageName as string;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>Calendar</title>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/css/jquery-calendar.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.css">

    <style>
        

        .page-header-title {
            text-align: center;
            font-size: 2rem;
        }

        .full-width-text {
            width: 100%;
            text-align: center;
            background-color: #f8f9fa;
            padding: 10px 0;
            font-size: 1rem;
            color: #6c757d;
            border-top: 1px solid #e9ecef;
            margin-top: 10px;
        }

        .modal.fade {
            background: none;
            display: none !important;
        }

        .modal-backdrop {
            opacity: 0 !important;
            display: none !important;
        }

        .modal {
            background: none;
            overflow-y: visible;
            overflow-x: visible;
        }

        .container-fluid {
            padding: 15px;
        }

        #calendar {
            margin-top: 20px;
        }


        .btn-success {
            margin-left: 0;
        }

        .calendar-header .d-flex {
            align-items: center;
            gap: 10px;
        }

        @@media (max-width: 768px) {
            .page-header-title {
                font-size: 1.5rem;
            }

            .calendar-header {
                flex-direction: column;
                align-items: flex-start;
            }
        }

      

        .page-header-title{
            justify-content: center;
            font-size : 50%;
            font-weight :bold;
            font-family: 'Roboto', sans-serif;
        }

        .page-header.page-header-light {
            color: rgba(31, 45, 65, 0.5);
        }


        .container-fluid {
            padding: 80px;
        }

        .page-header > .container:first-of-type {
            background: aliceblue;
        }


          .modal-c2 {
            background-color: #c1c1c1;
        }

        .modal .fade2 {
            background-color: #00000F;
        }

        .calendar-timeline {
            padding-top: 41px;
            margin-top: 60px;
        }
     

        .nav-fixed #layoutSidenav #layoutSidenav_content {
            padding-left: 0;
            top: 3.625rem;
        }

        .page-header.page-header-light .page-header-subtitle#pickup {
            color: rgb(0 0 0);
        }



        .container-fluid {
            padding: 5% 5%;
            margin-top: -5%;
        }

        .border-bottom {
            border-bottom: 1px solid #ffffff !important;
        }

        .page-header-title {
            font-size: larger;
        }

        .page-header > .container-fluid:first-of-type {
            display: flex;
            justify-content: center;
            margin-bottom: 5px;
        }

        .mb-3 {
            margin-top: 5% !important;
        }

        .page-header-title {
            font-size: larger;
        }

        .mb-3 {
        }

        .container-fluid {
            margin-bottom: -5px;
        }

        body {
            font-family: Arial, sans-serif;
            background-color: whitesmoke;
        }

        body {
            font-family: Arial, sans-serif;
            background-color: whitesmoke;
        }

        .page-header-title {
            text-align: center;
            font-size: 2rem;
        }

        .full-width-text {
            width: 100%;
            text-align: center;
            background-color: #f8f9fa;
            padding: 10px 0;
            font-size: 1rem;
            color: #6c757d;
            border-top: 1px solid #e9ecef;
            margin-top: 10px;
        }

        .modal.fade {
            background: none;
            display: none !important;
        }

        .modal-backdrop {
            opacity: 0 !important;
            display: none !important;
        }

        .modal {
            background: none;
            overflow-y: visible;
            overflow-x: visible;
        }

        .container-fluid {
            padding: 15px;
        }

        #calendar {
            margin-top: 20px;
        }


        .btn-success {
            margin-left: 0;
        }

        .calendar-header .d-flex {
            align-items: center;
            gap: 10px;
        }

        @@media (max-width: 768px) {
            .page-header-title {
                font-size: 1.5rem;
            }

            .calendar-header {
                flex-direction: column;
                align-items: flex-start;
            }
        }


        .page-header-title {
            justify-content: center;
            font-size: 50%;
            font-weight: bold;
            font-family: 'Roboto', sans-serif;
        }

        .page-header.page-header-light {
            color: rgba(31, 45, 65, 0.5);
        }


        .container-fluid {
            padding: 80px;
        }

        .page-header > .container:first-of-type {
            background: aliceblue;
        }


        .modal-c2 {
            background-color: #c1c1c1;
        }

        .modal .fade2 {
            background-color: #00000F;
        }

        .calendar-timeline {
            padding-top: 41px;
            margin-top: 60px;
        }


        .nav-fixed #layoutSidenav #layoutSidenav_content {
            padding-left: 0;
            top: 3.625rem;
        }

        /*  .container-fluid {
                padding: 5% 5%;
                margin-top: -5%;
            } */

        .border-bottom {
            border-bottom: 1px solid #ffffff !important;
        }


        .calendar .event-date, .calendar .event-name {
            padding: 5px 0px 0px 10px;
        }

        /* General styles for the header */
        .page-header {
            background-color: whitesmoke;
            border-bottom: 1px solid #ddd; /* border-bottom color to match your border color */
            margin-bottom: 2rem; /* Adjust as needed for spacing from the next element */
           /*  padding: 1rem 0;  */
            padding: 0.5rem 0; 
        }

        /* Container styles for centering content */
        .container {
            background-color: white;
            text-align: center;
            padding: 1rem; /* Add padding inside the container */
        }

        /* Page header content styling */
        .page-header-content {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100%; /* Ensure content is centered vertically */
        }

        /* Page header title styling */
        .page-header-title {
            margin: 0; /* Remove default margin to prevent unwanted spacing */
            font-size: 2rem; /* Adjust font size as needed */
        }

        .page-header-title {
            font-size: larger;
        }

        .mb-3 {
        }

        .container-fluid {
            margin-bottom: -5px;
        }

        #layoutSidenav {
            margin-top: -2%;
        }

        .page-header > .container:first-of-type {
            background: white;
          
        }

        .page-header {
            margin: 0 100px;
            margin-left: 100px;
            margin-right: 100px;
        }

        #layoutSidenav_content
        {
            margin-right: 0px;
            padding-right: 0px;
        }


/* 
        .calendar .calendar-events .calendar-event:last-of-type {
            margin-right: 0;
            border-radius: 10px;
        } */
        

    </style>
</head>
<header class="page-header page-header-compact page-header-light border-bottom bg-white mb-4 .pgaeheader">
    <div class="container">
        <div class="page-header-content">
            <div class="row align-items-center justify-content-center pt-3">
                <div class="col-12 text-center">
                    <h3 class="page-header-subtitle mb-1 pickup" id="pickup">
                        Pickup
                    </h3>
                </div>
                <div class="col-12 text-center">
                    <div class="page-header-subtitle">
                        @*         All Times Are In EST *@
                    </div>
                </div>
            </div>
        </div>
    </div>
</header>
<body>
   



    <div class="container-fluid">
        <div class="calendar-header">
            @{
                var userEmails = User.FindFirstValue(ClaimTypes.Email);
            }
            <input type="hidden" name="Email" value="@userEmails" class="form-control" id="Email" placeholder="Enter Email" disabled />
        </div>

        <div class="row">
            <div class="col-12">
                <div id="calendar"></div>
            </div>
        </div>


    </div>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>

    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/moment.js/moment-with-locales.min.js"></script>
    <script src="~/jquery.touchswipe/jquery.touchswipe.min.js"></script>
    <script src="~/js/jquery-calendar.min.js"></script>

    <script>
        $(document).ready(function () {
            var events = @Html.Raw(Json.Serialize(Model.Events));

            $(document).ready(function () {
                $('#layoutHeader').remove();
                var events = @Html.Raw(Json.Serialize(Model.Events));


                $('#calendar').Calendar({
                    locale: 'en',
                    weekday: {
                        timeline: {
                            intervalMinutes: 60,
                            fromHour: 7,
                            toHour: 23
                        }
                    },
                    events: events,
                    view: 'week',
                    defaultView: {
                        largeScreen: 'week',
                        smallScreen: 'day',
                        smallScreenThreshold: 1000
                    },
                    weekday: {
                        timeline: {
                            fromHour: 7,
                            toHour: 23,
                            intervalMinutes: 60,
                            format: 'HH:mm',
                            heightPx: 50,
                            autoResize: true
                        },
                        dayline: {
                            weekdays: [0, 1, 2, 3, 4, 5, 6],
                            format: 'MM/DD',
                            heightPx: 31,
                            month: {
                                format: 'MMMM YYYY',
                                heightPx: 30,
                                weekFormat: 'w'
                            }
                        }
                    },
                    month: {
                        format: 'MMMM YYYY',
                        heightPx: 31,
                        weekline: {
                            format: 'w',
                            heightPx: 80
                        },
                        dayheader: {
                            weekdays: [0, 1, 2, 3, 4, 5, 6],
                            format: 'dddd',
                            heightPx: 30
                        },
                        day: {
                            format: 'MM/DD'
                        }
                    },
                    unixTimestamp: moment().format('X'),
                    event: {
                        hover: {
                            delay: 500000
                        }
                    },
                    categories: {
                        enable: true,
                        hover: {
                            delay: 500
                        }
                    }



                }).init();


                // Handle calendar event click and prevent default behavior
                $('#calendar').on('Calendar.event-click', function (event, instance, elem, evt) {
                    debugger;
                    var startTime = evt.start;
                    var endTime = evt.end;
                    var timeSlotName = evt.title;

                    var startTimeISO = new Date(startTime * 1000).toISOString();
                    var endTimeISO = new Date(endTime * 1000).toISOString();

                    // Retrieve time slot ID based on the event details
                    $.ajax({
                        url: 'GetTimeSlotId',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({
                            StartTime: startTimeISO,
                            EndTime: endTimeISO,
                            TimeSlotName: timeSlotName
                        }),
                        success: function (response) {
                            // $('#modal-content').css('display', 'None');
                            if (response && response.timeSlotId ) {
                                console.log("" + response.maxUsers);
                                // Get user email from the claims
                                var userEmail = $('#Email').val();

                                // Retrieve user ID based on email
                                $.ajax({
                                    url: '/@tenantName/User/GetUserIdByEmail',
                                    type: 'POST',
                                    contentType: 'application/json',
                                    data: JSON.stringify({ Email: userEmail }),
                                    success: function (userResponse) {

                                        if (userResponse && userResponse.userId) {
                                            // Sign up for the time slot
                                            $.ajax({
                                                url: '/@tenantName/TimeSlotSignup/AddTimeSlotSignUps',
                                                type: 'POST',
                                                contentType: 'application/json',
                                                data: JSON.stringify({
                                                    TimeSlotId: response.timeSlotId,
                                                    UserId: userResponse.userId,
                                                    MaxNumberOfUsers: response.maxUsers,
                                                    Attended: false
                                                }),
                                                success: function (signupResponse) {
                                                    showMessage(signupResponse.message);
                                               
                                                },
                                                error: function (xhr, status, error) {
                                                    var response = xhr.responseJSON;
                                                    showMessage(response ? response.message : error, true);
                                                }
                                            });
                                        } else {
                                            showMessage('User not found.', true);
                                        }
                                    },
                                    error: function (xhr, status, error) {
                                        showMessage('Something went wrong. Please try again later.' + error, true);
                                    }
                                });
                            } else {
                                showMessage('Time slot not found.', true);
                            }
                        },
                        error: function (xhr, status, error) {
                            showMessage('Something went wrong. Please try again later.' + error, true);
                        }
                    });
                });


            });
           
            function showMessage(message, isError) {
                var modalTitle = 'Success';
                var modalClass = 'success';

                if (message.includes('You have already signed up for this time slot.')) {
                    modalTitle = 'Warning';
                    modalClass = 'warning'; // Change to warning for this specific message
                } else if (message.includes('Slot is full please select different slot.')) {
                    modalTitle = 'Warning';
                    modalClass = 'warning'; // Change to warning for this specific message
                } else if (message.includes('Successfully signed up for the time slot.')) {
                    modalTitle = 'Success';
                    modalClass = 'success';
                } else if (isError) {
                    modalTitle = 'Error';
                    modalClass = 'error';
                }

                console.log(message);

                Swal.fire({
                    title: modalTitle,
                    text: message,
                    icon: modalClass,
                    showConfirmButton: true,
                    customClass: {
                        container: 'swal-container',
                        popup: 'swal-popup',
                        title: 'swal-title',
                        content: 'swal-content'
                    },
                    didClose: function () {
                        // Restore the scroll behavior after the modal is hidden
                        $('body').css({
                            'overflow-y': 'auto',
                            'overflow-x': 'hidden'
                        });
                    }
                });

                // Prevent horizontal scroll bar
                $('body').css({
                    'overflow-y': 'auto',
                    'overflow-x': 'hidden'
                });
            }
        });
    </script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>





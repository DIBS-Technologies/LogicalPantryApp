@using System.Security.Claims;
@model LogicalPantry.DTOs.TimeSlotDtos.UserCalendarDto

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>Calendar</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/css/jquery-calendar.min.css">
    <style>
        /* Your CSS styles */
    </style>
</head>
<body>
    <div class="container-fluid px-4">
        <div class="row calendar-header">
            <div class="col">
                <h1>Calendar View</h1>
                @{
                    var userEmails = User.FindFirstValue(ClaimTypes.Email);
                }
                <input type="email" name="Email" value="@userEmails" class="form-control" id="Email" placeholder="Enter Email" disabled />
                
            </div>
            @* <div class="row">               
                <div class="col-6" style="padding-left:2px;">
                    <div class="dropdown d-inline">
                        <select id="eventSelect" class="form-control" onchange="handleSelectChange()">
                            <option value="" selected disabled>Type</option>
                            <option value="1" data-title="Food Pickup">Food Pickup</option>
                            <option value="2" data-title="Volunteer">Volunteer</option>
                            <option value="3" data-title="Appointment">Appointment</option>
                        </select>
                    </div>
                </div>
            </div> *@
            <!-- Modal for displaying messages -->
            <div class="modal fade" id="messageModal" tabindex="-1" aria-labelledby="messageModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="messageModalLabel">Message</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body" id="messageModalBody">
                            <!-- Message will be inserted here -->
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col">
                    <div id="calendar"></div>
                </div>
            </div>
          
        </div>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/moment.js/moment-with-locales.min.js"></script>
    <script src="~/jquery.touchswipe/jquery.touchswipe.min.js"></script>
    <script src="~/js/jquery-calendar.min.js"></script>
    <script>
        $(document).ready(function () {
            // Initialize calendar with events
            var events = @Html.Raw(Json.Serialize(Model.Events));

            $('#calendar').Calendar({
                events: events
            }).init();

            // Handle calendar event click and prevent default behavior
            $('#calendar').on('Calendar.event-click', function (event, instance, elem, evt) {
                debugger;
                event.preventDefault();
                debugger;
                var startTime = evt.start;
                var endTime = evt.end;
                var timeSlotName = evt.title;

                var startTimeISO = new Date(startTime * 1000).toISOString();
                var endTimeISO = new Date(endTime * 1000).toISOString();

                // Retrieve time slot ID based on the event details
                $.ajax({
                    url: '/TimeSlot/GetTimeSlotId',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        StartTime: startTimeISO,
                        EndTime: endTimeISO,
                        TimeSlotName: timeSlotName
                    }),
                    success: function (response) {
                        debugger;
                        if (response && response.timeSlotId) {
                            // Get user email from the claims
                            var userEmail = $('#Email').val();

                            // Retrieve user ID based on email
                            $.ajax({
                                url: '/User/GetUserIdByEmail',
                                type: 'POST',
                                contentType: 'application/json',
                                data: JSON.stringify({ Email: userEmail }),
                                success: function (userResponse) {
                                    debugger;
                                    if (userResponse && userResponse.userId) {
                                        // Sign up for the time slot
                                        $.ajax({
                                            url: '/TimeSlotSignup/AddTimeSlotSignUps',
                                            type: 'POST',
                                            contentType: 'application/json',
                                            data: JSON.stringify({
                                                TimeSlotId: response.timeSlotId,
                                                UserId: userResponse.userId,
                                                Attended: false
                                            }),
                                            success: function (signupResponse) {
                                                showMessage(signupResponse.message);
                                            },
                                            error: function (xhr, status, error) {
                                                var response = xhr.responseJSON;
                                                showMessage(response ? response.message : error, true);
                                            }
                                        });
                                    } else {
                                        showMessage('User not found.', true);
                                    }
                                },
                                error: function (xhr, status, error) {
                                    showMessage('Error retrieving user ID: ' + error, true);
                                }
                            });
                        } else {
                            showMessage('Time slot not found.', true);
                        }
                    },
                    error: function (xhr, status, error) {
                        showMessage('Error retrieving time slot ID: ' + error, true);
                    }
                });
            });
        });

        // Function to show a message in a Bootstrap modal
        function showMessage(message, isError) {
            var modalTitle = isError ? 'Error' : 'Success';
            var modalClass = isError ? 'text-danger' : 'text-success';

            $('#messageModalLabel').text(modalTitle);
            $('#messageModalBody').text(message).removeClass('text-success text-danger').addClass(modalClass);

            $('#messageModal').modal('show');
        }


    </script>

</body>
</html>

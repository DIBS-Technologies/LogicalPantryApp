@using System.Security.Claims;

@{
    var tenantName = ViewBag.TenantName as string;
    var pagename = ViewBag.PageName as string;
    var isUser = User.IsInRole("User");
    var tenantId = ViewBag.TenantId;
    var userClaim = User.Claims
               .Where(c => c.Type == ClaimTypes.Role)
               .Select(c => c.Value).ToList();

    bool isAdmin = userClaim.Contains("Admin");
    var isAuthenticated = User.Identity.IsAuthenticated;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - LogicalPantry.Web</title>

    <link href="/css/default-main.css" rel="stylesheet" />
    <link href="~/css/style.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.3/dist/sweetalert2.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

    <style>
        html, body {
            margin: 0;
            padding: 0;
            height: 100%;
            /* Prevent scrollbars */
        }

        #layoutSidenav {
            display: flex;
            flex-direction: column;
            height: 100vh; /* Full viewport height */
            width: 100vw; /* Full viewport width */
            margin: 0;
        }

        #layoutSidenav_content {
            flex: 1;
            display: flex;
            flex-direction: column;
            box-sizing: border-box;
            overflow: hidden;
            padding: 20px; /* Default padding */
            margin-left: 0;
            margin-right: 0;
        }

        .topnav {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0 1rem;
            background-color: white;
            height: 60px; /* Adjust based on navbar height */
            width: 100%; /* Ensure full width */
        }

            .topnav .navbar-nav {
                display: flex;
                flex-direction: row;
                margin-left: auto; /* Push links to the right */
            }

            .topnav .nav-link {
                padding-right: 1rem;
                padding-left: 1rem;
                font-weight: normal;
                transition: color 0.3s, font-weight 0.3s;
            }

                .topnav .nav-link:hover {
                    color: #0061f2;
                    font-weight: bold;
                }

        .page-name {
            flex: 1;
            text-align: center;
            font-weight: bold;
            color: #1f2d41;
            font-size: 1.25rem;
        }

        main {
            flex: 1;
            display: flex;
            align-items: center;
            justify-content: center;
            width: 100%;
            overflow: hidden;
        }

        iframe {
            width: 100%;
            height: 100%;
            border: none;
            display: block;
        }

        footer {
            text-align: center;
            padding: 10px;
            background-color: #f8f9fa;
            color: #6c757d;
            position: relative;
            bottom: 0;
            width: 100%;
        }

        .footer-custom {
            background-color: #fff;
            color: #1f2d41;
        }

        .sidenav-light {
            background-color: #fff;
            color: #1f2d41;
        }

            .sidenav-light .sidenav-menu .nav-link:hover {
                color: #0061f2;
            }

        .sidenav .sidenav-menu .nav .sidenav-menu-heading {
            padding: 1.75rem 1rem 0.75rem;
            font-size: 0.7rem;
            font-weight: bold;
            text-transform: uppercase;
            letter-spacing: 0.05em;
        }

        .sidenav-light .sidenav-menu .nav-link:hover {
            color: #0061f2;
            background-color: #f1f1f1;
            border-radius: 0.2rem;
            margin: 0rem 0.5rem 0rem 0.75rem;
            padding-left: 0.5rem !important;
        }

        /* Adjust padding and margin for specific conditions */
        .nav-fixed #layoutSidenav #layoutSidenav_content {
            padding-left: @(isAdmin ? "0" : "20px");
            padding-right: @(isAdmin ? "0" : "20px");
            margin-left: @(isAdmin ? "2rem" : "0");
            margin-right: @(isAdmin ? "2rem" : "0");
        }

        .hidden {
            display: none;
        }

        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
        }

        #layoutSidenav {
            display: flex;
            flex-direction: column;
            flex: 1;
        }

        #layoutSidenav_content {
            flex: 1;
            display: flex;
            flex-direction: column;
            padding: 20px; /* Adjust as needed */
        }

        footer {
            display: flex;
            justify-content: center; /* Center horizontally */
            align-items: center; /* Center vertically if needed */
            padding: 10px;
            background-color: #f8f9fa;
            color: #6c757d;
            width: 100%;
        }

        .nav-fixed #layoutSidenav #layoutSidenav_content {
            padding-left: @(isAdmin ? "5%" : "0");
            padding-right: 0;
            margin-left: 2rem;
            margin-right: 2rem;
        }

    </style>

</head>
<body class="@(isAdmin ? "nav-fixed" : "")">
    <div id="layoutSidenav">
        <nav class="topnav navbar navbar-expand shadow navbar-light bg-white" id="sidenavAccordion">
            <div class="tenantImage">
                <img id="logoImage" src="~/Image/Demo.jpeg"  style="width: 95px; padding-left: 10px; opacity:100%" />
            </div>
            <div class="page-name" id="pageName">
                @(!string.IsNullOrEmpty(pagename) ? pagename.Replace(".html", " ") : "")
            </div>

            <div class="navbar-nav">
                @if (User.Identity.IsAuthenticated && (isAdmin || isUser))
                {
                    <a class="nav-link" href="/@tenantName/TimeSlot/UserCalendar" id="pickUp">Pickup</a>
                }
                <a class="nav-link" href="/@tenantName/Donation/PayPal">Donation</a>
                @if (isAuthenticated)
                {
                    <a class="nav-link" href="/@tenantName/Auth/Logout">Logout</a>
                }
                else
                {
                    <a class="nav-link" href="/@tenantName/Auth/LoginView">LogIn</a>
                }
                <input id="pag" type="hidden" name="name" value="@pagename" />
                <input type="hidden" value="@isUser" id="isUser" />
            </div>
        </nav>
        <div id="layoutSidenav_content">
           <main style="flex: 1; overflow: hidden;">
                <iframe src="" id="urlFrameId" style="width: 100%; height: 100%; border: none; display: block; overflow: hidden;"></iframe>
            </main>
            @* <footer style="display: flex; justify-content: center; align-items: center; padding: 10px; background-color: #f8f9fa; color: #6c757d; width: 100%; position: relative; bottom: 0;">
                <div class="container-end" style="display: flex; justify-content: center; width: 100%;">
                    <p class="mb-0" style="color: black;">&copy; @DateTime.Now.Year - LogicalPantry</p>
                </div>
            </footer> *@
        </div>
    </div>
    @section Scripts {
        <script>
            $(document).ready(function () {
                var userEmail = '@User.FindFirstValue(ClaimTypes.Email) ?? User.Claims.FirstOrDefault(c => c.Type == "preferred_username")?.Value';

                async function fetchImageUrl(tenantId) {
                    return new Promise((resolve, reject) => {
                        $.ajax({
                            url: `/@tenantName/Information/Get`,
                            method: "GET",
                            data: { tenantid: tenantId },
                            success: function (response) {
                                const imageUrl = response;

                                if (imageUrl) {
                                    const tenantDiv = $('.tenantImage');

                                    if (tenantDiv.length > 0) {
                                        tenantDiv.find('#logoImage').remove();

                                        const img = $('<img>', {
                                            id: 'logoImage',
                                            src: imageUrl,
                                            style: 'width: 95px; padding-left: 10px; opacity: 100%;'
                                        });

                                        tenantDiv.append(img);

                                        resolve(imageUrl);
                                    } else {
                                        console.error("No element found with class 'tenantImage'");
                                        reject(new Error("No element found with class 'tenantImage'"));
                                    }
                                } else {
                                    console.error("ImageUrl is missing in the response");
                                    reject(new Error("ImageUrl is missing in the response"));
                                }
                            },
                            error: function (xhr, status, error) {
                                console.error("Cannot find Image src", status, error);
                                reject(new Error(`Cannot find Image src: ${status} ${error}`));
                            }
                        });
                    });
                }

                async function updateImage(tenantId) {
                    try {
                        await fetchImageUrl(tenantId);
                    } catch (error) {
                        console.error("Failed to update image", error);
                    }
                }

                updateImage(@tenantId);


                var tenantId = @ViewBag.TenantId ?? 'null'; // Default to 'null' if ViewBag.TenantId is null
                var pageName = '@ViewBag.PageName';

                // Convert tenantId to a string if needed
                if (tenantId !== 'null') {
                    tenantId = tenantId.toString(); // Ensure tenantId is a string
                }
                // sessionStorage.setItem('TenantId', @tenantId);
                // sessionStorage.setItem('PageName', @pagename);

                var handlerValue = $("#pag").val();
                $("#urlFrameId").attr("src", "/TenantHomePage/" + handlerValue);

                $("#pageName").text(handlerValue ? handlerValue.replace('.html', ' ') : '');
            });
        </script>
    }
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.3/dist/sweetalert2.all.min.js" crossorigin="anonymous"></script>
</body>
</html>

</html>
